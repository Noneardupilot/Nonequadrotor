/******************************************************************************************************************
**头文件说明 ： 系统文件配置
**时      间 ： 2018-4-30
**作      者 ： 历小伟
**联系 方式  ： 15982962929
**备      注 ：
******************************************************************************************************************/


/*=============================================================================================================
                                         头文件START
==============================================================================================================*/

#include "system.h"
#include "copter.h"

/*=============================================================================================================
                                         头文件START
==============================================================================================================*/

SYSTEM System_set;



/*==================================================================================================================*/
/*==================================================================================================================*
**函数原型 : void SysTick_Init(void)
**功    能 : 滴答定时器配置
**输    入 : None
**输    出 : None
**备    注 : 实现系统时钟的8分频，系统时钟168Mhz,这里是21Mhz，可以实现定时243天的定时计数,配置滴答定时器1ms周期
**================================================================================================================*/
/*================================================================================================================*/

void SYSTEM::SysTick_Init(void)
{
	RCC_ClocksTypeDef  rcc_clocks;
	uint32_t         cnts;

	RCC_GetClocksFreq(&rcc_clocks);

	cnts = (uint32_t)rcc_clocks.HCLK_Frequency / TICK_PER_SECOND;
	cnts = cnts / 8;

	SysTick_Config(cnts);
	SysTick_CLKSourceConfig(SysTick_CLKSource_HCLK_Div8);
}


/*====================================================================================================*/
/*====================================================================================================*
**函数原型 : uint32_t GetSysTime_us(void) 
**功    能 : 获取系统时间
**输    入 : None
**输    出 : value
**备    注 : 
**====================================================================================================*/
/*====================================================================================================*/
uint32_t SYSTEM::GetSysTime_us(void) 
{
	register uint32_t ms;
	u32 value;
	ms = sysTickUptime;
	value = ms * TICK_US + (SysTick->LOAD - SysTick->VAL) * TICK_US / SysTick->LOAD;
	return value;
}


/*================================================================================================================================*/
/*================================================================================================================================*
**函数原型 : float Get_Cycle_T(u8 item)	
**功    能 : 获取系统运行时间
**输    入 : item
**输    出 : None
**备    注 : 我们这里可以选择配置获取系统的运行时间，
             Get_Cycle_T(0):系统的初始化的时间，
             Get_Cycle_T(1):系统的内环运行时间，
             Get_Cycle_T(2):系统的外环运行时间，
             Get_Cycle_T(3):
**===============================================================================================================================*/
/*==============================================================================================================================*/
float SYSTEM::Get_Cycle_T(u8 item)	
{
	Cycle_T[item][OLD] = Cycle_T[item][NOW];	        //上一次的时间,Cycle_T[1][1]=Cycle_T[1][0]
	
	Cycle_T[item][NOW] = GetSysTime_us()/1000000.0f; //本次时间,Cycle_T[1][0]=多少s,这里已经转换成多少s
	
	Cycle_T[item][NEW] = ( ( Cycle_T[item][NOW] - Cycle_T[item][OLD] ) );//间隔的时间（周期）Cycle_T[1][2]，这是运行的周期函数
	return Cycle_T[item][NEW];
}


/*================================================================================================================================*/
/*================================================================================================================================*
**函数原型 : void Cycle_Time_Init(void)
**功    能 : 循环时间初始化
**输    入 : item
**输    出 : None
**备    注 : 
**===============================================================================================================================*/
/*==============================================================================================================================*/
void SYSTEM::Cycle_Time_Init(void)
{
	u8 i;
	for(i=0;i<GET_TIME_NUM;i++)
	{
		Get_Cycle_T(i);  
	}

}

/*====================================================================================================*/
/*====================================================================================================*
**函数原型 : void Delay_us(uint32_t us)
**功    能 : us延迟
**输    入 : None
**输    出 : None
**备    注 : 
**====================================================================================================*/
/*====================================================================================================*/
void SYSTEM::delay_us(uint32_t us)
{
    uint32_t now = GetSysTime_us();
    while (GetSysTime_us() - now < us);
}


/*====================================================================================================*/
/*====================================================================================================*
**函数原型 : void Delay_ms(uint32_t ms)
**功    能 : ms延迟
**输    入 : None
**输    出 : None
**备    注 : 实现系统时钟的8分频，系统时钟168Mhz,这里是21Mhz，可以实现定时243天的定时计数
**====================================================================================================*/
/*====================================================================================================*/
void SYSTEM::delay_ms(uint32_t ms)
{
    while (ms--)
        delay_us(1000);

}

/*====================================================================================================*/
/*====================================================================================================*
**函数原型 : void SYSTEM::Systick_Handler(void)
**功    能 : ms延迟
**输    入 : None
**输    出 : None
**备    注 : 实现系统时钟的8分频，系统时钟168Mhz,这里是21Mhz，可以实现定时243天的定时计数
**====================================================================================================*/
/*====================================================================================================*/
void SYSTEM::Systick_Handler(void)
{
  sysTickUptime++;
}












/**********************************************************************************************************
*                                      file---end
**********************************************************************************************************/
